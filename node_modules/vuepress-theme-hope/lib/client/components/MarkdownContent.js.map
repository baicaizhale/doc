{"version":3,"file":"MarkdownContent.js","sourceRoot":"","sources":["../../../src/client/components/MarkdownContent.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE/D,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AACnE,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAE1C,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAE7D,OAAO,iCAAiC,CAAC;AAEzC,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,iBAAiB;IAEvB,KAAK,EAAE;QACL,oCAAoC;QACpC,MAAM,EAAE,OAAO;KAChB;IAED,KAAK,CAAC,KAAK;QACT,MAAM,SAAS,GAAG,YAAY,EAAE,CAAC;QAEjC,MAAM,cAAc,GAAG,GAAG,EAAe,CAAC;QAE1C,MAAM,SAAS,GAAG,eAAe,CAAC,cAAc,EAAE;YAChD,UAAU,EAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;gBACzC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK;gBACvB,CAAC,CAAC,IAAI;YACR,UAAU,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,MAAM,WAAW,GAAG,QAAQ,CAC1B,GAAG,EAAE,CACH,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;YACtD,SAAS,CAAC,KAAK,CAClB,CAAC;QAEF,SAAS,CAAC,GAAG,EAAE;YACb,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC;YAEtC,cAAc,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE;gBACpC,IAAI,KAAK,EAAE,CAAC;oBACV,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACpC,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACvC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,GAAU,EAAE,CACjB,CAAC,CAAC,OAAO,EAAE;YACT,GAAG,EAAE,cAAc;YACnB,KAAK,EAAE,CAAC,oBAAoB,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC;YACvD,YAAY,EAAE,EAAE;SACjB,CAAC,CAAC;IACP,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { isNumber } from \"@vuepress/helper/client\";\nimport { useElementHover, watchImmediate } from \"@vueuse/core\";\nimport type { VNode } from \"vue\";\nimport { computed, defineComponent, h, onMounted, ref } from \"vue\";\nimport { Content } from \"vuepress/client\";\n\nimport { useThemeData } from \"@theme-hope/composables/index\";\n\nimport \"../styles/markdown-content.scss\";\n\nexport default defineComponent({\n  name: \"MarkdownContent\",\n\n  props: {\n    /** whether use customized layout */\n    custom: Boolean,\n  },\n\n  setup(props) {\n    const themeData = useThemeData();\n\n    const contentElement = ref<HTMLElement>();\n\n    const isHovered = useElementHover(contentElement, {\n      delayEnter: isNumber(themeData.value.focus)\n        ? themeData.value.focus\n        : 1500,\n      delayLeave: 0,\n    });\n\n    const enableFocus = computed(\n      () =>\n        Boolean(themeData.value.focus ?? themeData.value.pure) &&\n        isHovered.value,\n    );\n\n    onMounted(() => {\n      const html = document.documentElement;\n\n      watchImmediate(enableFocus, (value) => {\n        if (value) {\n          html.classList.add(\"is-focusing\");\n        } else {\n          html.classList.remove(\"is-focusing\");\n        }\n      });\n    });\n\n    return (): VNode =>\n      h(Content, {\n        ref: contentElement,\n        class: [\"theme-hope-content\", { custom: props.custom }],\n        \"vp-content\": \"\",\n      });\n  },\n});\n"]}